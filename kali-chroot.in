#!/bin/bash

shopt -s extglob

m4_include(common)

usage() {
  cat <<EOF
usage: ${0##*/} chroot-dir [command]

    -h                  Print this help message
    -u <user>[:group]   Specify non-root user and optional group to use
    -d [display]        Specify display to use for X11 applications
    -m                  Export DBus machine ID to chroot environment

If 'command' is unspecified, ${0##*/} will launch '/bin/bash'.

EOF
}

chroot_add_resolv_conf() {
  local chrootdir=$1 resolv_conf=$1/etc/resolv.conf

  [[ -e /etc/resolv.conf ]] || return 0

  # Handle resolv.conf as a symlink to somewhere else.
  if [[ -L $chrootdir/etc/resolv.conf ]]; then
    # readlink(1) should always give us *something* since we know at this point
    # it's a symlink. For simplicity, ignore the case of nested symlinks.
    resolv_conf=$(readlink "$chrootdir/etc/resolv.conf")
    if [[ $resolv_conf = /* ]]; then
      resolv_conf=$chrootdir$resolv_conf
    else
      resolv_conf=$chrootdir/etc/$resolv_conf
    fi

    # ensure file exists to bind mount over
    if [[ ! -f $resolv_conf ]]; then
      install -Dm644 /dev/null "$resolv_conf" || return 1
    fi
  elif [[ ! -e $chrootdir/etc/resolv.conf ]]; then
    # The chroot might not have a resolv.conf.
    return 0
  fi

  chroot_add_mount /etc/resolv.conf "$resolv_conf" --bind
}

xauthority="$chrootdir/tmp/.Xauthority"
xdisplay=""
chroot_export_xauthority() {
  local chrootdir=$1 display=$2
  xauth extract $xauthority $display || return 1
}

chroot_export_dbus() {
  chroot_add_mount /var/lib/dbus "$1/var/lib/dbus" --bind
}

while getopts ':hu:md:' flag; do
  case $flag in
    h)
      usage
      exit 0
      ;;
    u)
      userspec=$OPTARG
      ;;
    m)
      exportdbus=1
      ;;
    d)
      xdisplay=$OPTARG
      ;;
    :)
      die '%s: option requires an argument -- '\''%s'\' "${0##*/}" "$OPTARG"
      ;;
    ?)
      die '%s: invalid option -- '\''%s'\' "${0##*/}" "$OPTARG"
      ;;
  esac
done
shift $(( OPTIND - 1 ))

(( EUID == 0 )) || die 'This script must be run with root privileges'
(( $# )) || die 'No chroot directory specified'
chrootdir=$1
shift

[[ -d $chrootdir ]] || die "Can't create chroot on non-directory %s" "$chrootdir"

if ! mountpoint -q "$chrootdir"; then
  warning "$chrootdir is not a mountpoint."
  chroot_add_mount $chrootdir $chrootdir --bind || die "failed to bind mountpoint onto itself"
fi

if [[ $xdisplay == "" ]]; then
  unset $xauthority
fi

chroot_setup "$chrootdir" || die "failed to setup chroot %s" "$chrootdir"
chroot_add_resolv_conf "$chrootdir" || die "failed to setup resolv.conf"
[[ $exportdbus ]] && (chroot_export_dbus "$chrootdir" || die "failed to export dbus")
[[ "$xdisplay" != "" ]] && (chroot_export_xauthority "$chrootdir" "$xdisplay" || die "failed to export xauthority")

chroot_args=()
[[ $userspec ]] && chroot_args+=(--userspec "$userspec")

SHELL=/bin/bash XAUTHORITY=$xauthority DISPLAY=$xdisplay unshare --fork --pid chroot "${chroot_args[@]}" -- "$chrootdir" "$@"
